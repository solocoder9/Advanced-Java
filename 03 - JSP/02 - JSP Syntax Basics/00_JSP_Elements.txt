JSP Tags/Elements
-----------------
- In JSP, tags are specific elements that are used to define the structure and behavior of the JSP page.
- They are typically placed at the top of the JSP page and do not generate any output.
- There are three primary categories of JSP tags:-
		1> Scripting Tags
			● Declaration Tags (<%! %>)
			● Scriptlet Tags (<% %>)
			● Expression Tags (<%= %>)
		2> Directive Tags
			● Page Directive (<%@ page ... %>)
			● Include Directive (<%@ include ... %>)
			● Taglib directive (<%@ taglib %>)
		3> Action Tags
			● Include (<jsp:include>)
			● Forward (<jsp:forward>)
			● Use Bean (<jsp:useBean>)
			● Set Property (<jsp:setProperty>)
			● Get Property (<jsp:getProperty>)
			

1> Scripting Tags
-----------------
- Scripting tags allow Java code to be embedded directly within a JSP page. 
- There are three types of scripting tags:

	■ 1.1 Declaration Tags (<%! %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Allows you to declare variables and methods that become part of the class definition of the 
	  JSP servlet.
	● Usage: Declared code is placed outside the service method of the servlet and can be accessed by any 
	  scriptlet or expression within the page.
	● Common Use: Declare instance variables or helper methods to be reused in the page.
	● Example:
		<%! int counter = 0; %>
		<%! public String getGreeting() { return "Hello!"; } %>	
	
	■ 1.2 Scriptlet Tags (<% %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Embeds Java code that is executed during the request processing.
	● Usage: Scriptlet code is inserted into the service() method of the generated servlet and is executed when 
	  the page is requested.
	● Common Use: Perform conditional logic, loop structures, and interact with server-side objects such as 
	  request, response, or session.
	● Example:
		<% 
   			int num = 10; 
   			out.println("Value of num is: " + num); 
		%>
		
	■ 1.3 Expression Tags (<%= %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Outputs the result of an expression directly to the response (the output sent to the client).
	● Usage: The result of the expression is converted to a string and written to the output stream.
	● Common Use: Output dynamic content, such as variables or results of method calls, directly into the HTML.
	● Example:
		<%= new java.util.Date() %>
	
		
2> Directive Tags
-----------------
- Directive tags provide global information about the JSP page. 
- These are instructions for the JSP engine that controls the structure and behavior of the servlet.

	■ 2.1 Page Directive (<%@ page ... %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Provides information about the entire JSP page, such as the content type, character encoding, 
	  import statements, etc.
	● Attributes:
		○ language: Defines the scripting language (typically Java).
		○ import: Imports Java classes.
		○ contentType: Specifies the MIME type.
	● Common Use: Set page-level configurations such as content type or import classes.
	● Example:
		<%@ page language="java" contentType="text/html; charset=UTF-8" %>
		<%@ page import="java.util.Date" %>
		
	■ 2.2 Include Directive (<%@ include ... %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Includes a static resource (HTML, JSP) during the translation phase of the JSP page.
	● Usage: The content of the included file is merged into the JSP at translation time, acting as if the 
	  file's content is part of the original JSP.
	● Common Use: Reuse common parts like headers, footers, or navigation bars.
	● Example:
		<%@ include file="header.jsp" %>
		
	■ 2.3 Taglib Directive (<%@ taglib %>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Declares a custom tag library that can be used within the JSP page.
	● Usage: Specifies the URI and prefix for custom tags that are defined in a tag library.
	● Common Use: Enable the use of custom JSP tag libraries, such as JSTL (JavaServer Pages Standard Tag Library).
	● Example:
		<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
	
		
3. Action Tags
--------------
- JSP action tags are used to control the behavior of the JSP page and interact with JavaBeans components and 
other JSP elements.

	■ 3.1 Include Action (<jsp:include>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Dynamically includes another resource (such as another JSP or HTML file) at request time.
	● Usage: Content of the included resource is inserted into the current page during request processing.
	● Common Use: Reuse components or resources dynamically at runtime.
	● Example:
		<jsp:include page="header.jsp" />
		
	■ 3.2 Forward Action (<jsp:forward>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Forwards the current request to another resource, such as a servlet, JSP, or HTML file.
	● Usage: When a request is forwarded, the control is transferred to the target resource, and no further 
	  content is processed from the original JSP.
	● Common Use: Redirect requests to another resource.
	● Example:
		<jsp:forward page="nextPage.jsp" />
		
	■ 3.3 UseBean Action (<jsp:useBean>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Instantiates or retrieves a JavaBean and makes it available to the JSP page.
	● Attributes:
		○ id: The name of the bean in the JSP page.
		○ class: The fully qualified class name of the bean.
		○ scope: The scope in which the bean is available (page, request, session, or application).
	● Common Use: Manage JavaBeans that store session or application data.
	● Example:
		<jsp:useBean id="user" class="com.example.UserBean" scope="session" />
		
	■ 3.4 SetProperty Action (<jsp:setProperty>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Sets the properties of a JavaBean using request parameters or explicitly defined values.
	● Attributes:
		○ name: The name of the bean.
		○ property: The property of the bean to set.
		○ value: The value to set the property to.
	● Common Use: Set properties of a JavaBean.
	● Example:
		<jsp:setProperty name="user" property="username" value="JohnDoe" />
		
	■ 3.5 GetProperty Action (<jsp:getProperty>)
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	● Definition: Retrieves the value of a property from a JavaBean and inserts it into the output stream.
	● Attributes:
		○ name: The name of the bean.
		○ property: The property to retrieve.
	● Common Use: Display the properties of a JavaBean on a JSP page.
	● Example:
		<jsp:getProperty name="user" property="username" />
		
		
		
		
Summary for Interview & Notes:
------------------------------
Scripting Tags: Allow embedding of Java code within JSP.	
	Declaration: Declare variables and methods globally.
	Scriptlet: Add executable Java code within the page.
	Expression: Output results directly into HTML.
	
Directive Tags: Provide global settings for the JSP page.
	Page: Configure page-wide attributes like import, content type.
	Include: Include static content during the translation phase.
	Taglib: Enable custom tag libraries in the JSP.
	
Action Tags: Control page behavior and interact with JavaBeans.
	Include: Include resources at request time.
	Forward: Forward requests to another resource.
	UseBean: Manage JavaBeans within the JSP.
	SetProperty/GetProperty: Set or get properties of a JavaBean.	