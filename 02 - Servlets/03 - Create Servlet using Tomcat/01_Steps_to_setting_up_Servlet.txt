Steps to Create a Servlet Application using Tomcat Server
---------------------------------------------------------
1. Setup and Prerequisites:
   - Ensure that the JDK and Apache Tomcat server are installed and configured.
   - Set the JAVA_HOME and CATALINA_HOME environment variables.

2. Create a Dynamic Web Project in Eclipse:
   1. Open Eclipse and go to File > New > Dynamic Web Project.
   2. Enter a project name (e.g., "MyServletProject").
   3. Select the target runtime (e.g., Apache Tomcat v10.0).
   4. Check the option Generate web.xml deployment descriptor.
   5. Click Finish.

3. Create the Servlet Class:
   1. Right-click on the src folder in your project and select New > Servlet.
   2. Enter the package name and servlet class name.
   3. Configure the URL mapping (e.g., /myServlet).
   4. Click Finish.

   Example servlet code:
   ```java
   package com.example;

   import java.io.IOException;
   import javax.servlet.ServletException;
   import javax.servlet.http.HttpServlet;
   import javax.servlet.http.HttpServletRequest;
   import javax.servlet.http.HttpServletResponse;

   public class MyServlet extends HttpServlet {
       protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
           response.setContentType("text/html");
           response.getWriter().println("<h1>Hello, Servlet!</h1>");
       }
   }
   ```

4. Configure web.xml (Optional if using annotations):
   - If you need to configure the servlet in web.xml:
   ```xml
   <servlet>
       <servlet-name>MyServlet</servlet-name>
       <servlet-class>com.example.MyServlet</servlet-class>
   </servlet>
   <servlet-mapping>
       <servlet-name>MyServlet</servlet-name>
       <url-pattern>/myServlet</url-pattern>
   </servlet-mapping>
   ```

5. Build and Deploy the Project:
   1. Right-click the project and select Run As > Run on Server.
   2. Choose the configured Tomcat server and click Finish.
   3. The server starts, and the servlet is deployed automatically.

6. Access the Servlet:
   - Open a web browser and enter the following URL:
   http://localhost:8080/MyServletProject/myServlet
   - You should see the output generated by the servlet (e.g., "Hello, Servlet!").

7. Understanding the Directory Structure:
   - src/main/java: Contains your Java source code (servlet class).
   - WebContent/WEB-INF/web.xml: Contains the deployment descriptor (if used).
   - WebContent/WEB-INF/lib: Place any required libraries here (optional).

8. Managing the Project:
   - You can manage the Tomcat server from the Servers tab in Eclipse, where you can start, stop, or restart 
     the server.

9. Testing and Debugging:
   - You can test different URL patterns and request methods (e.g., GET, POST) by updating the servlet code 
     and re-deploying the application.
   - Use breakpoints in the servlet code for debugging.
